
version: 0.2

env:
  parameter-store:
    APP_SERVER_ADDRESSES: "DEPLOY_SEARCHGOV_SERVER_ADDRESS"
    CRON_SERVER_ADDRESSES: "DEPLOY_CRON_SERVER_ADDRESSES"
    DEPLOYMENT_PATH: "DEPLOY_SEARCHGOV_DEPLOYMENT_PATH"
    RESQUE_SERVER_ADDRESSES: "DEPLOY_RESQUE_SERVER_ADDRESSES"
    RESQUE_WORKERS_COUNT: "DEPLOY_RESQUE_WORKERS_COUNT"
    SEARCHGOV_THREADS: "SEARCHGOV_THREADS"
    SEARCHGOV_WORKERS: "SEARCHGOV_WORKERS"
    SERVER_DEPLOYMENT_USER: "DEPLOY_SERVER_DEPLOYMENT_USER"
    GITHUB_TOKEN: "DEPLOY_GITHUB_TOKEN"
    SEARCH_SECRETSMANAGER_KEY_SECRET_NAME: "SEARCH_SECRETSMANAGER_KEY_SECRET_NAME"
    SEARCH_AWS_REGION: "SEARCH_AWS_REGION"
    SEARCH_ENV_EC2_KEY: "SEARCH_ENV_EC2_KEY"

exported-variables:
  - APP_SERVER_ADDRESSES
  - DEPLOYMENT_PATH
  - RESQUE_SERVER_ADDRESSES
  - SEARCHGOV_THREADS
  - SEARCHGOV_WORKERS
  - SERVER_DEPLOYMENT_USER
  - SSH_KEY_PATH

phases:
  install:
    runtime-versions:
      python: 3.x
    commands:
      - echo "=== Install phase ==="
      - export PATH="$HOME/.rbenv/bin:$PATH" || true
      - eval "$(rbenv init -)" || true
      - git config --global --add safe.directory '*'
      - git config --global advice.detachedHead false

  pre_build:
    commands:
      - echo "=== Pre-build phase ==="
      - rm -rf ~/.bundle vendor/bundle .bundle || true
      - echo "Fetching SSH key from Secrets Manager"
      - aws secretsmanager get-secret-value --secret-id "$SEARCH_SECRETSMANAGER_KEY_SECRET_NAME" --region "$SEARCH_AWS_REGION" --query 'SecretString' --output text > "$SEARCH_ENV_EC2_KEY"
      - chmod 600 "$SEARCH_ENV_EC2_KEY"
      - export SSH_KEY_PATH="$(pwd)/$SEARCH_ENV_EC2_KEY"
      - echo "SSH_KEY_PATH=$SSH_KEY_PATH"

  build:
    commands:
      - echo "=== Build phase: bundle install ==="
      - bundle config set --local silence_root_warning true
      - bundle config set --local path 'vendor/bundle'
      - bundle install --jobs=4 --retry=3

      - echo "=== SSH setup ==="
      - mkdir -p ~/.ssh
      - |
        cat > ~/.ssh/config <<'EOF'
        Host *
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
          ForwardAgent yes
        EOF
      - chmod 700 ~/.ssh
      - chmod 600 ~/.ssh/config
      - eval "$(ssh-agent -s)"
      - ssh-add "$SSH_KEY_PATH"

      - |
        if [ -n "${GITHUB_TOKEN:-}" ]; then
          echo "Configuring GitHub token helper"
          git config --global credential.helper store
          printf "https://%s:x-oauth-basic@github.com\n" "$GITHUB_TOKEN" > ~/.git-credentials
          chmod 600 ~/.git-credentials
        fi

      - echo "=== Repair remote git mirror(s) on Capistrano targets ==="
      - |
        bundle exec cap "$SEARCH_ENV" invoke "bash -lc 'set -euo pipefail; \
          DEPLOYMENT_PATH=\${DEPLOYMENT_PATH:-/var/www/caps}; \
          SERVER_DEPLOYMENT_USER=\${SERVER_DEPLOYMENT_USER:-ssm-user}; \
          REPO_PATH=\"\$DEPLOYMENT_PATH/repo\"; \
          ORIGIN_URL=\${CODEBUILD_SOURCE_REPO_URL:-\$(git remote get-url origin 2>/dev/null || true)}; \
          [ -n \"\$ORIGIN_URL\" ] || { echo \"No origin URL found\" >&2; exit 1; }; \
          sudo mkdir -p \"\$DEPLOYMENT_PATH\"; \
          sudo chown -R \"\$SERVER_DEPLOYMENT_USER:\$SERVER_DEPLOYMENT_USER\" \"\$DEPLOYMENT_PATH\"; \
          sudo -u \"\$SERVER_DEPLOYMENT_USER\" bash -lc \"rm -rf \\\"\$REPO_PATH\\\"; \
            mkdir -p \\\"\$REPO_PATH\\\" && cd \\\"\$REPO_PATH\\\"; \
            git init --bare; \
            git remote add origin \\\"\$ORIGIN_URL\\\" || git remote set-url origin \\\"\$ORIGIN_URL\\\"; \
            git config --unset-all remote.origin.fetch || true; \
            git config --add remote.origin.fetch '+refs/heads/*:refs/heads/*'; \
            git config --add remote.origin.fetch '+refs/tags/*:refs/tags/*'; \
            git fetch origin --prune --tags --force; \
            git fsck --no-dangling || true\"'"

      - echo "=== Deploy ==="
      - bundle exec cap "$SEARCH_ENV" deploy
      - bundle exec cap "$SEARCH_ENV" resque:restart
      - bundle exec cap "$SEARCH_ENV" resque:scheduler:restart

artifacts:
  files:
    - '**/*'

