---
http_interactions:
- request:
    method: get
    uri: http://127.0.0.1:49884/__identify__
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
    body:
      encoding: UTF-8
      string: '70336838843960'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:15 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session
    body:
      encoding: UTF-8
      string: '{"desiredCapabilities":{"browserName":"chrome","version":"","platform":"ANY","javascriptEnabled":true,"cssSelectorsEnabled":true,"takesScreenshot":false,"nativeEvents":false,"rotatable":false},"capabilities":{"firstMatch":[{"browserName":"chrome"}]}}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '250'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '727'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"84.0.4147.105","chrome":{"chromedriverVersion":"84.0.4147.30
        (48b3e868b4cc0aa7e8149519690b6f6949e110a8-refs/branch-heads/4147@{#310})","userDataDir":"/var/folders/rh/2wd26btm8xlckg0059bt_x5r0000gp/T/.com.google.Chrome.69ZRZ3"},"goog:chromeOptions":{"debuggerAddress":"localhost:49910"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"mac
        os x","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss
        and notify","webauthn:virtualAuthenticators":true},"sessionId":"ed639ccb85e7933b59731ea416fb365c"}}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:19 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:49884/login"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '38'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:21 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/url
    body:
      encoding: UTF-8
      string: '{"url":"http://127.0.0.1:49884/admin/searchgov_domains"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '56'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:22 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:23 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        (normalize-space(string(.)) = ''Reindex'')) or (./@title = ''Reindex'')) or
        .//img[(./@alt = ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '170'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":".//a[./@href][((((./@id = ''Reindex'') or
        contains(normalize-space(string(.)), ''Reindex'')) or contains(./@title, ''Reindex''))
        or .//img[contains(./@alt, ''Reindex'')])]"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '191'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: get
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/screenshot
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '122256'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":""}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: delete
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/cookie
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/url
    body:
      encoding: UTF-8
      string: '{"url":"about:blank"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '21'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
- request:
    method: post
    uri: http://127.0.0.1:9515/session/ed639ccb85e7933b59731ea416fb365c/elements
    body:
      encoding: UTF-8
      string: '{"using":"xpath","value":"/html/body/*"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.7 (ruby macosx)
      Content-Length:
      - '40'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '12'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":[]}'
    http_version:
  recorded_at: Thu, 30 Jul 2020 22:43:24 GMT
recorded_with: VCR 4.0.0
