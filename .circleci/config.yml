version: 2.1

orbs:
  ruby: circleci/ruby@2.0.0
  browser-tools: circleci/browser-tools@1.5.2
  nodejs: circleci/node@5.1.1
  docker: circleci/docker@1.5.0

executors:
  test_executor:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string
      mysql_version:
        type: string

    working_directory: ~/search-gov

    docker:
      - image: cimg/ruby:<< parameters.ruby_version >>
        environment:
          RAILS_ENV: test
          BUNDLER_VERSION: "2.6.3"

      - image: cimg/mysql:<< parameters.mysql_version >>
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: "%"

      - image: redis:6.2

      - image: docker.elastic.co/elasticsearch/elasticsearch:<< parameters.elasticsearch_version >>
        environment:
          bootstrap.memory_lock: true
          cluster.name: es_<< parameters.elasticsearch_version >>
          discovery.type: single-node
          http.port: 9200
          xpack.license.self_generated.type: trial
          xpack.monitoring.enabled: false
          xpack.security.enabled: false
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"

      - image: opensearchproject/opensearch:3
        environment:
          cluster.name: os-cluster
          discovery.type: single-node
          bootstrap.memory_lock: true
          http.port: 9300
          plugins.security.disabled: "true"
          OPENSEARCH_JAVA_OPTS: "-Xms256m -Xmx256m"
          OPENSEARCH_INITIAL_ADMIN_PASSWORD: S3venDr4gon!

      - image: apache/tika:2.4.1

commands:
  install_elasticsearch_plugins:
    description: "Install Elasticsearch Plugins"
    parameters:
      elasticsearch_version:
        type: string
    steps:
      - run:
          name: Install Elasticsearch Plugins
          command: |
            until curl -sS localhost:9200; do sleep 1; done
            elasticsearch_container_id=$(docker ps -qf "ancestor=docker.elastic.co/elasticsearch/elasticsearch:<< parameters.elasticsearch_version >>")
            docker exec $elasticsearch_container_id elasticsearch-plugin install analysis-kuromoji
            docker exec $elasticsearch_container_id elasticsearch-plugin install analysis-icu
            docker exec $elasticsearch_container_id elasticsearch-plugin install analysis-smartcn
            # Restart Elasticsearch to apply the plugins
            docker restart $elasticsearch_container_id
            # Wait for Elasticsearch to be ready after restart
            dockerize -wait tcp://localhost:9200 -timeout 1m

  install_firefox:
    description: "Install latest Firefox"
    steps:
      - browser-tools/install-firefox
      - run:
          command: |
            firefox --version
          name: Check install
  install_js_dependencies:
    description: "Install JavaScript dependencies"
    steps:
      - run:
          name: Clean node_modules
          command: rm -rf node_modules
      - nodejs/install:
          node-version: "20.10.0"
          install-yarn: true
      - run:
          name: Yarn Install
          command: yarn install --frozen-lockfile
  precompile_assets:
    description: "Pre-compile assets"
    steps:
      - run: bin/rails assets:precompile
  prepare_database:
    description: "Prepare the test database"
    steps:
      - run: bundle exec rake db:setup
  install_bundler_263:
    description: "Ensure Bundler 2.6.3 is installed and selected"
    steps:
      - run:
          name: Install Bundler 2.6.3
          command: |
            gem list -i bundler -v 2.6.3 || gem install bundler -v 2.6.3
            bundle _2.6.3_ --version

jobs:
  checkout_code:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string
      mysql_version:
        type: string

    executor:
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>
      mysql_version: << parameters.mysql_version >>

    steps:
      - checkout

      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m

      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/search-gov

  rspec:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string
      mysql_version:
        type: string

    executor:
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>
      mysql_version: << parameters.mysql_version >>

    parallelism: 6

    steps:
      - setup_remote_docker # Ensure Docker is set up for this job
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - install_bundler_263
      - ruby/install-deps:
          key: gems-ruby-<< parameters.ruby_version >>-v{{ .Environment.CACHE_VERSION }}

      - install_js_dependencies

      - install_firefox

      - install_elasticsearch_plugins:
          elasticsearch_version: << parameters.elasticsearch_version >>

      - prepare_database

      - precompile_assets

      - run:
          name: Run Tests
          command: |
            bundle exec rake usasearch:elasticsearch:create_indexes

            mkdir /tmp/test-results

            # Run Rspec tests
            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - ruby/install-deps:
          key: gems-ruby-<< parameters.ruby_version >>-v{{ .Environment.CACHE_VERSION }}

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  cucumber:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string
      mysql_version:
        type: string

    executor:
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>
      mysql_version: << parameters.mysql_version >>

    parallelism: 10

    steps:
      - setup_remote_docker # Ensure Docker is set up for this job
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - install_bundler_263
      - ruby/install-deps:
          key: gems-ruby-<< parameters.ruby_version >>-v{{ .Environment.CACHE_VERSION }}

      - install_js_dependencies

      - install_firefox

      - install_elasticsearch_plugins:
          elasticsearch_version: << parameters.elasticsearch_version >>

      - prepare_database

      - precompile_assets

      - run:
          name: Run Tests
          command: |
            bundle exec rake usasearch:elasticsearch:create_indexes

            bundle exec rake tmp:create

            mkdir /tmp/test-results

            # Run cucumber tests
            bundle exec cucumber --format progress \
                                --format junit \
                                --out /tmp/test-results/cucumber.xml \
                                --format progress \
                                -- $(circleci tests glob "features/*.feature" | circleci tests split --split-by=timings)
      - ruby/install-deps:
          key: gems-ruby-<< parameters.ruby_version >>-v{{ .Environment.CACHE_VERSION }}

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  jest:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string
      mysql_version:
        type: string
      node_version:
        type: string

    executor:
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>
      mysql_version: << parameters.mysql_version >>

    steps:
      - setup_remote_docker # Ensure Docker is set up for this job
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}

      - nodejs/install:
          install-yarn: true
          node-version: << parameters.node_version >>

      - install_js_dependencies

      - run:
          name: Run Tests
          command: |
            # Run jest tests
            yarn test:coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code:
          name: "checkout code: Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>, MySQL << matrix.mysql_version >>"
          matrix:
            parameters:
              ruby_version:
                - 3.3.7
              elasticsearch_version:
                - 7.17.7
                # not yet compatible with Elasticsearch 8
              mysql_version:
                - "8.0"

      - rspec:
          requires:
            - checkout_code
          name: "rspec: Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>, MySQL << matrix.mysql_version >>"
          matrix:
            parameters:
              ruby_version:
                - 3.3.7
              elasticsearch_version:
                - 7.17.7
              mysql_version:
                - "8.0"

      - cucumber:
          requires:
            - checkout_code
          name: "cucumber: Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>, MySQL << matrix.mysql_version >>"
          matrix:
            parameters:
              ruby_version:
                - 3.3.7
              elasticsearch_version:
                - 7.17.7
              mysql_version:
                - "8.0"

      - jest:
          requires:
            - checkout_code
          name: "jest: NodeJS << matrix.node_version >>, Ruby << matrix.ruby_version >>, MySQL << matrix.mysql_version >>"
          matrix:
            parameters:
              ruby_version:
                - 3.3.7
              elasticsearch_version:
                - 7.17.7
              mysql_version:
                - "8.0"
              node_version:
                - 20.10.0
