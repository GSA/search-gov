# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details

version: 2
jobs:
  build:
    environment:
      COVERAGE: true
    docker:
      - image: circleci/ruby:2.3.5-browsers
        env:
        - RAILS_ENV=test
      - image: circleci/mysql:5.6
        env:
        - MYSQL_ALLOW_EMPTY_PASSWORD=true
        - MYSQL_ROOT_HOST=%
      - image: redis:3.2

    working_directory: ~/search-gov

    steps:

      - checkout

      - run:
          name: Use developer secrets
          command: |
            mv config/secrets.yml.dev config/secrets.yml

      - run:
          name: Install MySQL Client
          command: |
            sudo apt-get update && sudo apt-get install mysql-client

      - run:
          name: Install Elasticsearch
          command: |
            java -version
            echo $JAVA_HOME
            curl -L -O https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.7.3.tar.gz
            tar -xvf elasticsearch-1.7.3.tar.gz
            PLUGINS=(
              "elasticsearch/license/latest"
              "elasticsearch/marvel/latest"
              "polyfractal/elasticsearch-inquisitor/latest"
              "elasticsearch/elasticsearch-analysis-kuromoji/2.7.0"
              "elasticsearch/elasticsearch-analysis-smartcn/2.7.0"
              "elasticsearch/elasticsearch-analysis-icu/2.7.0"
              "elasticsearch/watcher/latest"
            )
            for plugin in ${PLUGINS[*]}; do /home/circleci/search-gov/elasticsearch-1.7.3/bin/plugin install $plugin; done
            echo "script.index: on" >> /home/circleci/search-gov/elasticsearch-1.7.3/config/elasticsearch.yml
            echo "script.inline: on" >> /home/circleci/search-gov/elasticsearch-1.7.3/config/elasticsearch.yml

      # Restore bundle cache
      - type: cache-restore
        key: search-gov-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install Dependencies
          command: |
            bundle install --without development --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - type: cache-save
        key: search-gov-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Prepare database
          command: |
            bundle exec rake db:create
            # Configure MySQL 5.6 for ROW_FORMAT=DYNAMIC storage
            cat .circleci/database-configuration.sql | bundle exec rails db
            bundle exec rake db:structure:load

      - run:
          name: Run Tests
          command: |
            /home/circleci/search-gov/elasticsearch-1.7.3/bin/elasticsearch -d
            sleep 10
            bundle exec rake usasearch:elasticsearch:create_indexes

            mkdir /tmp/test-results
            ./cc-test-reporter before-build

            # Run Rspec tests
            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

            ./cc-test-reporter format-coverage --output coverage/codeclimate.rspec.json

            # Run cucumber tests
            cucumber features -o /tmp/test-results/cucumber.txt -f progress
            ./cc-test-reporter format-coverage --output coverage/codeclimate.cucumber.json

            # Report coverage to Code Climate
            ./cc-test-reporter sum-coverage coverage/codeclimate.*.json
            ./cc-test-reporter upload-coverage

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
