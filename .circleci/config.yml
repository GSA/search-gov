# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details

version: 2.1

orbs:
  ruby: circleci/ruby@1.6.0
  browser-tools: circleci/browser-tools@1.2.5

executors:
  test_executor:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string

    working_directory: ~/search-gov

    docker:
      # using custom images, see .circleci/images/primary/
      - image: searchgov/ruby:<< parameters.ruby_version >>
        environment:
          RAILS_ENV: test

      - image: cimg/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: "%"

      - image: redis:3.2

      - image: docker.elastic.co/elasticsearch/elasticsearch:<< parameters.elasticsearch_version >>
        environment:
          bootstrap.memory_lock: true
          cluster.name: es_<< parameters.elasticsearch_version >>
          discovery.type: single-node
          http.port: 9200
          xpack.license.self_generated.type: trial
          xpack.monitoring.enabled: false
          xpack.security.enabled: false
          ES_JAVA_OPTS: '-Xms256m -Xmx256m'

      - image: apache/tika:1.24.1


commands:
  install_chrome:
    description: 'Install latest Chrome and ChromeDriver'
    steps:
      - browser-tools/install-chrome:
          # Workaround for https://github.com/CircleCI-Public/browser-tools-orb/issues/33
          chrome-version: 100.0.4896.60
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
  prepare_database:
    description: 'Prepare the test database'
    steps:
      - run: bundle exec rake db:setup

jobs:
  checkout_code:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string

    executor: 
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>

    steps:
      - checkout

      - run:
          name: Wait for Elasticsearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m

      - run:
          name: Use developer secrets
          command: |
            mv config/secrets.yml.dev config/secrets.yml

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/search-gov

  rspec:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string

    executor: 
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>

    parallelism: 6

    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}

      - ruby/install-deps:
          key: gems-ruby-<< parameters.ruby_version >>-v{{ .Environment.CACHE_VERSION }}

      - install_chrome

      - prepare_database

      - run:
          name: Run Tests
          command: |
            bundle exec rake usasearch:elasticsearch:create_indexes

            mkdir /tmp/test-results
            mkdir /tmp/capybara
            ./cc-test-reporter before-build

            # Run Rspec tests
            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

            ./cc-test-reporter format-coverage \
              --output coverage/codeclimate.rspec.$CIRCLE_NODE_INDEX.<< parameters.ruby_version >>_<< parameters.elasticsearch_version >>.json

      - persist_to_workspace:
          root: ~/search-gov/coverage
          paths:
          - codeclimate.rspec.*.json

      # collect reports
      - store_test_results:
          path: /tmp/capybara
      - store_artifacts:
          path: /tmp/capybara
          destination: test-results

  cucumber:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string

    executor: 
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>

    parallelism: 10

    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}

      - ruby/install-deps:
          key: gems-ruby-<< parameters.ruby_version >>-v{{ .Environment.CACHE_VERSION }}

      - install_chrome

      - prepare_database

      - run:
          name: Run Tests
          command: |
            bundle exec rake usasearch:elasticsearch:create_indexes

            bundle exec rake tmp:create

            mkdir /tmp/test-results
            mkdir /tmp/capybara
            ./cc-test-reporter before-build

            # Run cucumber tests
            bundle exec cucumber --format progress \
                                --format junit \
                                --out /tmp/test-results/cucumber.xml \
                                --format progress \
                                -- $(circleci tests glob "features/*.feature" | circleci tests split --split-by=timings)

            ./cc-test-reporter format-coverage \
              --output coverage/codeclimate.cucumber.$CIRCLE_NODE_INDEX.<< parameters.ruby_version >>_<< parameters.elasticsearch_version >>.json

      - persist_to_workspace:
          root: ~/search-gov/coverage
          paths:
          - codeclimate.cucumber.*.json

      # collect reports
      - store_test_results:
          path: /tmp/capybara
      - store_artifacts:
          path: /tmp/capybara

  report_coverage:
    parameters:
      ruby_version:
        type: string
      elasticsearch_version:
        type: string

    executor: 
      name: test_executor
      ruby_version: << parameters.ruby_version >>
      elasticsearch_version: << parameters.elasticsearch_version >>

    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}

      - attach_workspace:
          at: ~/search-gov/coverage

      - run:
          name: Report coverage to Code Climate
          command: |
            ./cc-test-reporter sum-coverage --parts 16 \
              coverage/codeclimate.*.<< parameters.ruby_version >>_<< parameters.elasticsearch_version >>.json \
              --output coverage/codeclimate_full_report.json

            ./cc-test-reporter upload-coverage --input coverage/codeclimate_full_report.json

            ruby scripts/check_coverage.rb ${PWD}/coverage/codeclimate_full_report.json

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code:
          name: "checkout code: Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>"
          matrix:
            parameters:
              ruby_version:
                - 2.7.5
              elasticsearch_version:
                - 6.8.23
                - 7.17.3

      - rspec:
          requires:
            - checkout_code
          name: "rspec: Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>"
          matrix:
            parameters:
              ruby_version:
                - 2.7.5
              elasticsearch_version:
                - 6.8.23
                - 7.17.3

      - cucumber:
          requires:
            - checkout_code
          name: "cucumber: Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>"
          matrix:
            parameters:
              ruby_version:
                - 2.7.5
              elasticsearch_version:
                - 6.8.23
                - 7.17.3

# Skipping coverage report until all tests are enabled and passing: SRCH-3414
#      - report_coverage:
#          requires:
#            - rspec
#            - cucumber
#          name: "report coverage: Ruby << matrix.ruby_version >>, ES << matrix.elasticsearch_version >>"
#          matrix:
#            # We only report coverage for one run, as the coverage will be
#            # identical in all versions if all specs are passing
#            parameters:
#              ruby_version:
#                - 2.7.5
#              elasticsearch_version:
#                - 6.8.23
